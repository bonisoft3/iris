apiVersion: skaffold/v4beta11
kind: Config
requires:
  - configs: [ "services_tracker" ]
    path: ../../services/tracker/skaffold.yaml
  - configs: [ "services_tracker-tx" ]
    path: ../../services/tracker-tx/skaffold.yaml
  - configs: [ "guis_web" ]
    path: ../../guis/web/skaffold.yaml
  #only uncomment guis/web when in development mode
metadata:
  name: trash

portForward:
- resourceType: service
  resourceName: services-tracker-svc
  port: 50051  # grpc
  address: 0.0.0.0
- resourceType: service
  resourceName: services-tracker-svc
  port: 50081  # grpcui
  address: 0.0.0.0
- resourceType: service
  resourceName: services-tracker-svc
  port: 9090  # tracker admin
  address: 0.0.0.0
- resourceType: service
  resourceName: services-tracker-svc
  port: 11434  # ollama
  address: 0.0.0.0
- resourceType: service
  resourceName: services-tracker-svc
  port: 18080  # transcoded api
  address: 0.0.0.0
- resourceType: service
  resourceName: pgrst-svc
  port: 28080  # postgREST api
  address: 0.0.0.0
- resourceType: service
  resourceName: postgres-service
  port: 5432  # postgres
  address: 0.0.0.0
- resourceType: service
  resourceName: guis-web-svc
  port: 8080  # ui
  address: 0.0.0.0
- resourceType: service
  resourceName: firefox-svc
  port: 5800  # browser
  address: 0.0.0.0
- resourceType: service
  resourceName: electric-service
  port: 3000  # browser
  address: 0.0.0.0

profiles:
- name: preview
  activation:
  - command: dev
  - command: debug
  manifests:
    kustomize:
      paths:
      - overlays/preview/
  deploy:
    kubeContext: kind-iris  # create with `kind create cluster -n iris`
    kubectl:
      defaultNamespace: default
  build:
    local:
      push: false
      # on mac using buildkit and dependent image args which are not multiarch
      # can yield misleading messages, flip this to diagnose when needed
      useBuildkit: true
      useDockerCLI: true
      concurrency: 64
    artifacts:
      - image: gcr.io/trash-362115/ollama
        context: images/ollama
        docker:
          target: release

      - image: gcr.io/trash-362115/fake-gcs-server
        context: images/fake-gcs-server
        docker: {}

      - image: gcr.io/trash-362115/nginx
        context: ../../k8s/images/nginx
        docker: {}

      - image: gcr.io/trash-362115/mockserver
        context: images/mockserver
        docker: {}

      - image: gcr.io/trash-362115/playwright
        context: images/playwright
        docker: {}
  verify:
  - name: browse-preview-e2e
    container:
      name: playwright
      image: gcr.io/trash-362115/playwright
    executionMode:
      kubernetesCluster: {}
- name: production
  resourceSelector:
    allow:
      - groupKind: "Service.cloudrun.gcp.upbound.io"
        image: [".*"]
  manifests:
    kustomize:
      paths:
      - overlays/production/
      buildArgs: [--enable-alpha-plugins, --enable-exec]
  deploy:
    helm:
      releases:
        - name: crossplane
          repo: https://charts.crossplane.io/stable
          remoteChart: crossplane
          namespace: crossplane-system
          createNamespace: true
          wait: true
    kubectl:
      defaultNamespace: crossplane-system
      hooks:
        before:
          - host:
              command:
                - kubectl
                - apply
                - -f
                - ./overlays/production/gcp-provider.yaml
          - host:
              command:
                - kubectl
                - wait
                - --for=condition=Healthy
                - provider.pkg.crossplane.io/provider-gcp-cloudrun
                - --timeout=180s
          - host:
              command:
                - kubectl
                - wait
                - --for=condition=Healthy
                - provider.pkg.crossplane.io/provider-gcp-storage
                - --timeout=180s
          - host:
              command:
                - kubectl
                - scale
                - -n
                - crossplane-system
                - --replicas=1
                - deployment/crossplane
                - deployment/crossplane-rbac-manager
                - deployment/provider-gcp-cloudrun-a368a8b37079
                - deployment/provider-gcp-storage-fa83b31592ae
                - deployment/upbound-provider-family-gcp-cc226acde028
          - host:
              command:
                - kubectl
                - wait
                - --for=condition=Available
                - --timeout=180s
                - -n
                - crossplane-system
                - deployment/crossplane
                - deployment/crossplane-rbac-manager
                - deployment/provider-gcp-cloudrun-a368a8b37079
                - deployment/provider-gcp-storage-fa83b31592ae
                - deployment/upbound-provider-family-gcp-cc226acde028
        after:
        - host:
              command:
                - kubectl
                - wait
                - --for=condition=Ready
                - --all
                - bucket.storage.gcp.upbound.io
                - --timeout=180s
                - -n
                - crossplane-system
        - host:
              command:
                - kubectl
                - scale
                - -n
                - crossplane-system
                - --replicas=0
                - deployment/crossplane
                - deployment/crossplane-rbac-manager
                - deployment/provider-gcp-cloudrun-a368a8b37079
                - deployment/provider-gcp-storage-fa83b31592ae
                - deployment/upbound-provider-family-gcp-cc226acde028
    kubeContext: gke_trash-362115_us-central1_trash-cluster2
  build:
    tagPolicy:
      sha256: {}
    platforms: ["linux/amd64"]
    local:
      push: true
      useDockerCLI: true
      useBuildkit: true
      concurrency: 64
    artifacts:
      - image: gcr.io/trash-362115/postgrest
        context: images/postgrest
        docker: {}
