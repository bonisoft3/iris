# This starts with the edge cache config best practices:
# https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/edge
# Then we add:
# 1) http2 to grpc transcoding for the tracker backend, for the /grpc/ prefix
# 2) buf connect for the tracker backend, for the /cqrs/ prefix
# 3) /pgrst/ prefix stripping for the pgrst backend
#
# Notice: not currently used.

overload_manager:
  refresh_interval: 0.25s
  resource_monitors:
  - name: "envoy.resource_monitors.fixed_heap"
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.resource_monitors.fixed_heap.v3.FixedHeapConfig
      # Tune for your system.
      max_heap_size_bytes: 2147483648  # 2 GiB
  actions:
  - name: "envoy.overload_actions.shrink_heap"
    triggers:
    - name: "envoy.resource_monitors.fixed_heap"
      threshold:
        value: 0.95
  - name: "envoy.overload_actions.stop_accepting_requests"
    triggers:
    - name: "envoy.resource_monitors.fixed_heap"
      threshold:
        value: 0.98

admin:
  access_log_path: /tmp/envoy_admin_access.log
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9090

static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 18080
    listener_filters:
    # Uncomment if Envoy is behind a load balancer that exposes client IP address using the PROXY protocol.
    # - name: envoy.filters.listener.proxy_protocol
    #   typed_config:
    #     "@type": type.googleapis.com/envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol
    - name: "envoy.filters.listener.tls_inspector"
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
    per_connection_buffer_limit_bytes: 32768  # 32 KiB
    filter_chains:
    - filter_chain_match:
      #  server_names: [ "iris.cleaning", "DESKTOP-EH1RG1B.local" ]
      # transport_socket:
      #  name: envoy.transport_sockets.tls
      #  typed_config:
      #    "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
      #    common_tls_context:
      #       tls_certificates:
      #       - certificate_chain: {filename: "certs/servercert.pem"}
      #         private_key: {filename: "certs/serverkey.pem"}
      #      alpn_protocols: ["h2"]
      filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          use_remote_address: true
          normalize_path: true
          merge_slashes: true
          # path_with_escaped_slashes_action: UNESCAPE_AND_REDIRECT
          common_http_protocol_options:
            idle_timeout: 3600s  # 1 hour
            headers_with_underscores_action: REJECT_REQUEST
          http2_protocol_options:
            max_concurrent_streams: 100
            initial_stream_window_size: 65536  # 64 KiB
            initial_connection_window_size: 1048576  # 1 MiB
          stream_idle_timeout: 300s  # 5 mins, must be disabled for long-lived and streaming requests
          request_timeout: 300s  # 5 mins, must be disabled for long-lived and streaming requests
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              upstream_log:
                name: envoy.file_access_log
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: "/tmp/pgrst_upstream.log"
          route_config:
            virtual_hosts:
            - name: pgrst
              domains: ["iris.cleaning"]
              routes:
              - match: { prefix: "/pgrst/" }  # the trailing slash is relevant
                route:
                  cluster: cloud_run_pgrst
                  idle_timeout: 15s  # must be disabled for long-lived and streaming requests
                  prefix_rewrite: "/"   # this will remove the /pgrst/ from the url
                  auto_host_rewrite: true  # makes it easier to reach ssl endpoints when debugging with curl
      transport_socket:
        name: envoy.transport_sockets.raw_buffer
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.raw_buffer.v3.RawBuffer
  clusters:
  - name: cloud_run_pgrst
    per_connection_buffer_limit_bytes: 32768  # 32 KiB
    type: logical_dns
    dns_lookup_family: V4_ONLY  # dunno why necessary, but was failing with ipv6 ips
    connect_timeout: 5s
    load_assignment:
      cluster_name: cloud_run_pgrst|443
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: api.iris.cleaning
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: api.iris.cleaning

layered_runtime:
  layers:
  - name: static_layer_0
    static_layer:
      envoy:
        resource_limits:
          listener:
            example_listener_name:
              connection_limit: 10000
      overload:
        global_downstream_max_connections: 50000
